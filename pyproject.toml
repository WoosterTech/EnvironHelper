[tool.poetry]
name = "environhelper"
version = "0.1.1"
description = "Create a .env file from a settings.py file."
authors = ["Karl Wooster <karl.wooster@alleima.com>"]
readme = "README.md"

[tool.poetry.scripts]
environhelper = "environhelper.cli:main"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
django-environ = "^0.11.2"
pydantic = "^2.7.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.5"
mypy = "^1.10.0"
pre-commit = "^3.7.1"
commitizen = "^3.27.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-sugar = "^1.0.0"

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "COM812",
  "ISC001",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"

# ==== mypy ====
[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
